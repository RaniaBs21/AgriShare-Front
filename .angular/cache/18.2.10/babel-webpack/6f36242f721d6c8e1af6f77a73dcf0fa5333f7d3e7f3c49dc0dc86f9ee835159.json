{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nexport var TypeFormation = /*#__PURE__*/function (TypeFormation) {\n  TypeFormation[\"GUIDE\"] = \"Guide\";\n  TypeFormation[\"PRESENTIEL\"] = \"Pr\\u00E9sentiel\";\n  TypeFormation[\"WEBINAIRE\"] = \"Webinaire\";\n  return TypeFormation;\n}(TypeFormation || {});\nexport var CategorieFormation = /*#__PURE__*/function (CategorieFormation) {\n  CategorieFormation[\"AGRICULTURE_BIO\"] = \"Agriculture Bio\";\n  CategorieFormation[\"GESTION_COOPERATIVE\"] = \"Gestion de Coop\\u00E9rative\";\n  CategorieFormation[\"MECANISATION\"] = \"M\\u00E9canisation\";\n  CategorieFormation[\"IRRIGATION\"] = \"Irrigation\";\n  CategorieFormation[\"COMMERCIALISATION\"] = \"Commercialisation\";\n  CategorieFormation[\"INNOVATION\"] = \"Innovation\";\n  return CategorieFormation;\n}(CategorieFormation || {});\nlet FormationComponent = class FormationComponent {\n  constructor(service, formationService, router) {\n    this.service = service;\n    this.formationService = formationService;\n    this.router = router;\n    this.formations = [];\n    this.formation = {\n      titre: '',\n      description: '',\n      date: '',\n      type: '',\n      categorie: ''\n    };\n    this.typeOptions = Object.keys(TypeFormation);\n    this.categorieOptions = Object.keys(CategorieFormation);\n    this.showForm = false;\n    this.service.showEdit = false;\n  }\n  ngOnInit() {\n    // Récupérer toutes les formations lors de l'initialisation du composant\n    this.formationService.getAllFormations().subscribe(data => {\n      console.log('Données récupérées :', data); // Afficher les données reçues\n      if (Array.isArray(data)) {\n        this.formations = data; // Assigner les formations récupérées si c'est un tableau\n      } else {\n        console.error('Les données récupérées ne sont pas un tableau');\n      }\n    }, error => {\n      console.error('Erreur lors de la récupération des formations', error);\n    });\n  }\n  participerFormation(formationId) {\n    // Logique pour participer à la formation, par exemple, une redirection ou une inscription\n    console.log(`Participer à la formation avec l'ID: ${formationId}`);\n    // Vous pouvez ici appeler un service pour gérer l'inscription à la formation\n  }\n  toggleForm() {\n    this.showForm = !this.showForm;\n  }\n  ajouterFormation() {\n    this.formationService.addFormation(this.formation).subscribe(newFormation => {\n      this.formations.push(newFormation);\n      this.showForm = false; // Cache le formulaire après l'ajout\n      this.formation = {}; // Réinitialise le formulaire\n    }, error => {\n      console.error('Erreur lors de l\\'ajout de la formation', error);\n    });\n  }\n  editFormation(formationId) {\n    // Logique d'édition de la formation (par exemple, ouvrir un formulaire de modification)\n    console.log(`Modifier la formation avec l'ID: ${formationId}`);\n  }\n  deleteFormation(formationId) {\n    this.formationService.deleteFormation(formationId).subscribe(response => {\n      console.log(response); // Logique après suppression\n      // Appelez la méthode pour récupérer toutes les formations après suppression\n      this.formationService.getAllFormations().subscribe(data => {\n        if (Array.isArray(data)) {\n          this.formations = data; // Mettez à jour la liste des formations\n        } else {\n          console.error('Les données récupérées ne sont pas un tableau');\n        }\n      }, error => {\n        console.error('Erreur lors de la récupération des formations après suppression', error);\n      });\n    }, error => {\n      console.error('Erreur lors de la suppression de la formation', error);\n    });\n  }\n};\nFormationComponent = __decorate([Component({\n  selector: 'app-formation',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  templateUrl: './formation.component.html',\n  styleUrls: ['./formation.component.css']\n})], FormationComponent);\nexport { FormationComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}