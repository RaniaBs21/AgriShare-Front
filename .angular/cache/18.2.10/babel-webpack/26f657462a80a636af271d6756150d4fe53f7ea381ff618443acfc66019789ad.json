{"ast":null,"code":"import { CommonModule } from \"@angular/common\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../blog/blog-service.service\";\nimport * as i2 from \"../../Services/formation.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction FormationComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"div\", 12)(3, \"h5\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 14);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 14)(8, \"small\", 15);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementStart(11, \"small\", 15);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵelementStart(14, \"small\", 15);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"a\", 16);\n    i0.ɵɵtext(17, \"Participer\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const formation_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(formation_r1.titre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(formation_r1.description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Date: \", formation_r1.date, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Type: \", formation_r1.type, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Categorie: \", formation_r1.categorie, \"\");\n  }\n}\nexport let FormationComponent = /*#__PURE__*/(() => {\n  class FormationComponent {\n    constructor(service, formationService, router) {\n      this.service = service;\n      this.formationService = formationService;\n      this.router = router;\n      this.formations = [];\n      this.formation = null;\n      this.service.showEdit = false;\n    }\n    ngOnInit() {\n      // Récupérer toutes les formations lors de l'initialisation du composant\n      this.formationService.getAllFormations().subscribe(data => {\n        console.log('Données récupérées :', data); // Afficher les données reçues\n        if (Array.isArray(data)) {\n          this.formations = data; // Assigner les formations récupérées si c'est un tableau\n        } else {\n          console.error('Les données récupérées ne sont pas un tableau');\n        }\n      }, error => {\n        console.error('Erreur lors de la récupération des formations', error);\n      });\n    }\n    static {\n      this.ɵfac = function FormationComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || FormationComponent)(i0.ɵɵdirectiveInject(i1.ServiceblogService), i0.ɵɵdirectiveInject(i2.FormationService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: FormationComponent,\n        selectors: [[\"app-formation\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 16,\n        vars: 1,\n        consts: [[1, \"banner-innerpage\", 2, \"background-image\", \"url(assets/images/landingpage/agric.jpg)\"], [1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-lg-9\", \"col-md-6\", \"no-trans\", \"align-self-center\", \"text-center\"], [1, \"title\"], [1, \"spacer\", \"feature22\"], [1, \"bg-light\", \"spacer\", \"feature1\"], [1, \"col-md-7\", \"text-center\", \"no-trans\"], [1, \"row\"], [\"class\", \"col-md-4 mb-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\", \"mb-4\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"text-muted\"], [\"href\", \"#\", 1, \"btn\", \"btn-primary\"]],\n        template: function FormationComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n            i0.ɵɵtext(5, \"FORMATION PAGE\");\n            i0.ɵɵelementEnd()()()()();\n            i0.ɵɵelementStart(6, \"div\", 5);\n            i0.ɵɵelement(7, \"div\", 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 1)(10, \"div\", 2)(11, \"div\", 7)(12, \"h2\", 4);\n            i0.ɵɵtext(13, \"Available Formations\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(14, \"div\", 8);\n            i0.ɵɵtemplate(15, FormationComponent_div_15_Template, 18, 5, \"div\", 9);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(15);\n            i0.ɵɵproperty(\"ngForOf\", ctx.formations);\n          }\n        },\n        dependencies: [CommonModule, i4.NgForOf],\n        styles: [\".card[_ngcontent-%COMP%]{border-radius:10px;box-shadow:0 4px 8px #0000001a;transition:transform .3s ease}.card[_ngcontent-%COMP%]:hover{transform:scale(1.05)}.card-body[_ngcontent-%COMP%]{background-color:#f9f9f9}.card-title[_ngcontent-%COMP%]{font-weight:700;font-size:1.2em}.card-text[_ngcontent-%COMP%]{font-size:.9em}.btn-primary[_ngcontent-%COMP%]{background-color:#007bff;border-color:#007bff}\"]\n      });\n    }\n  }\n  return FormationComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}